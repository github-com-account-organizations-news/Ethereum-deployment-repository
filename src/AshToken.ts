import BN from "bn.js";
import { Address } from "web3x/address";
import { EventLog, TransactionReceipt } from "web3x/formatters";
import { Contract, ContractOptions, TxCall, TxSend, EventSubscriptionFactory } from "web3x/contract";
import { Eth } from "web3x/eth";
import abi from "./AshTokenAbi";
export type MinterAddedEvent = {
  account: Address;
};
export type MinterRemovedEvent = {
  account: Address;
};
export type TransferEvent = {
  from: Address;
  to: Address;
  value: string;
};
export type ApprovalEvent = {
  owner: Address;
  spender: Address;
  value: string;
};
export interface MinterAddedEventLog extends EventLog<MinterAddedEvent, "MinterAdded"> {}
export interface MinterRemovedEventLog extends EventLog<MinterRemovedEvent, "MinterRemoved"> {}
export interface TransferEventLog extends EventLog<TransferEvent, "Transfer"> {}
export interface ApprovalEventLog extends EventLog<ApprovalEvent, "Approval"> {}
interface AshTokenEvents {
  MinterAdded: EventSubscriptionFactory<MinterAddedEventLog>;
  MinterRemoved: EventSubscriptionFactory<MinterRemovedEventLog>;
  Transfer: EventSubscriptionFactory<TransferEventLog>;
  Approval: EventSubscriptionFactory<ApprovalEventLog>;
}
interface AshTokenEventLogs {
  MinterAdded: MinterAddedEventLog;
  MinterRemoved: MinterRemovedEventLog;
  Transfer: TransferEventLog;
  Approval: ApprovalEventLog;
}
interface AshTokenTxEventLogs {
  MinterAdded: MinterAddedEventLog[];
  MinterRemoved: MinterRemovedEventLog[];
  Transfer: TransferEventLog[];
  Approval: ApprovalEventLog[];
}
export interface AshTokenTransactionReceipt extends TransactionReceipt<AshTokenTxEventLogs> {}
interface AshTokenMethods {
  name(): TxCall<string>;
  approve(spender: Address, value: number | string | BN): TxSend<AshTokenTransactionReceipt>;
  totalSupply(): TxCall<string>;
  transferFrom(from: Address, to: Address, value: number | string | BN): TxSend<AshTokenTransactionReceipt>;
  decimals(): TxCall<string>;
  increaseAllowance(spender: Address, addedValue: number | string | BN): TxSend<AshTokenTransactionReceipt>;
  mint(to: Address, value: number | string | BN): TxSend<AshTokenTransactionReceipt>;
  balanceOf(owner: Address): TxCall<string>;
  symbol(): TxCall<string>;
  addMinter(account: Address): TxSend<AshTokenTransactionReceipt>;
  renounceMinter(): TxSend<AshTokenTransactionReceipt>;
  decreaseAllowance(
    spender: Address,
    subtractedValue: number | string | BN,
  ): TxSend<AshTokenTransactionReceipt>;
  transfer(to: Address, value: number | string | BN): TxSend<AshTokenTransactionReceipt>;
  isMinter(account: Address): TxCall<boolean>;
  allowance(owner: Address, spender: Address): TxCall<string>;
}
export interface AshTokenDefinition {
  methods: AshTokenMethods;
  events: AshTokenEvents;
  eventLogs: AshTokenEventLogs;
}
export class AshToken extends Contract<AshTokenDefinition> {
  constructor(eth: Eth, address?: Address, options?: ContractOptions) {
    super(eth, abi, address, options);
  }
  deploy(): TxSend<AshTokenTransactionReceipt> {
    return super.deployBytecode(
      "0x60806040526040518060400160405280600981526020017f41736820546f6b656e0000000000000000000000000000000000000000000000815250600490805190602001906200005192919062000298565b506040518060400160405280600381526020017f4153480000000000000000000000000000000000000000000000000000000000815250600590805190602001906200009f92919062000298565b50600c600660006101000a81548160ff021916908360ff160217905550620000d633620000dc640100000000026401000000009004565b62000347565b6200010081600362000146640100000000026200111c179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200018157600080fd5b6200019c828262000205640100000000026401000000009004565b15620001a757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200024157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002db57805160ff19168380011785556200030c565b828001600101855582156200030c579182015b828111156200030b578251825591602001919060010190620002ee565b5b5090506200031b91906200031f565b5090565b6200034491905b808211156200034057600081600090555060010162000326565b5090565b90565b61129f80620003576000396000f3fe608060405234801561001057600080fd5b5060043610610112576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100b4578063a457c2d711610083578063a457c2d7146104bd578063a9059cbb14610523578063aa271e1a14610589578063dd62ed3e146105e557610112565b806370a082311461039457806395d89b41146103ec578063983b2d561461046f57806398650275146104b357610112565b806323b872dd116100f057806323b872dd1461021e578063313ce567146102a457806339509351146102c857806340c10f191461032e57610112565b806306fdde0314610117578063095ea7b31461019a57806318160ddd14610200575b600080fd5b61011f61065d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015f578082015181840152602081019050610144565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e6600480360360408110156101b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106fb565b604051808215151515815260200191505060405180910390f35b610208610712565b6040518082815260200191505060405180910390f35b61028a6004803603606081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071c565b604051808215151515815260200191505060405180910390f35b6102ac6107cd565b604051808260ff1660ff16815260200191505060405180910390f35b610314600480360360408110156102de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107e0565b604051808215151515815260200191505060405180910390f35b61037a6004803603604081101561034457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610885565b604051808215151515815260200191505060405180910390f35b6103d6600480360360208110156103aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108ad565b6040518082815260200191505060405180910390f35b6103f46108f5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610434578082015181840152602081019050610419565b50505050905090810190601f1680156104615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104b16004803603602081101561048557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610993565b005b6104bb6109b1565b005b610509600480360360408110156104d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109bc565b604051808215151515815260200191505060405180910390f35b61056f6004803603604081101561053957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a61565b604051808215151515815260200191505060405180910390f35b6105cb6004803603602081101561059f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a78565b604051808215151515815260200191505060405180910390f35b610647600480360360408110156105fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a95565b6040518082815260200191505060405180910390f35b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f35780601f106106c8576101008083540402835291602001916106f3565b820191906000526020600020905b8154815290600101906020018083116106d657829003601f168201915b505050505081565b6000610708338484610b1c565b6001905092915050565b6000600254905090565b6000610729848484610c7b565b6107c284336107bd85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b610b1c565b600190509392505050565b600660009054906101000a900460ff1681565b600061087b338461087685600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6590919063ffffffff16565b610b1c565b6001905092915050565b600061089033610a78565b61089957600080fd5b6108a38383610e84565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098b5780601f106109605761010080835404028352916020019161098b565b820191906000526020600020905b81548152906001019060200180831161096e57829003601f168201915b505050505081565b61099c33610a78565b6109a557600080fd5b6109ae81610fd6565b50565b6109ba33611030565b565b6000610a573384610a5285600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b610b1c565b6001905092915050565b6000610a6e338484610c7b565b6001905092915050565b6000610a8e82600361108a90919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b5657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b9057600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb557600080fd5b610d06816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d99816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610e5457600080fd5b600082840390508091505092915050565b600080828401905083811015610e7a57600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ebe57600080fd5b610ed381600254610e6590919063ffffffff16565b600281905550610f2a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b610fea81600361111c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6110448160036111c890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110c557600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561115657600080fd5b611160828261108a565b1561116a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561120257600080fd5b61120c828261108a565b61121557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a7230582051343e9baf4f62066547e65ca5659dde0ef4f140bf8f3fab85a49fa05f1ac3cc0029",
    ) as any;
  }
}
export var AshTokenAbi = abi;
